snippet main
	#!/usr/bin/python
	#coding=utf-8

	import sys
	import re
	import os.path
	import MySQLdb
	def main():
		printf("test")

	if __name__== "__main__" :
		main()

snippet array
	val = []
	val.append(0)

snippet itoa
	str(2)

snippet atoi
	int("ss")

snippet empty
	if not a:

snippet function
	def ${0}(param1: str) -> object:
		return "aaa"

snippet log
	print getframeinfo(currentframe()).lineno

snippet print
	print ("{} - {} ".format(str, str2))

snippet format
	val = "%s - %s " %(str, str2)

snippet reg-replace
	reg = '[^\d]+'
	str = re.sub(reg, '', str);

snippet reg-finall
	mats = re.findall('^([^:]+)', content, re.MULTILINE);

sinppet reg-seaach
	mats = re.search("[a-z]+", str)
	print mats.group(1)

sinppet reg-match
	re.compile("[a-z]").match(str)

snippet count
	len(array)

snippet importBasic
	import sys
	import re
	import os.path

snippet options
	param = {}
	com = re.compile("^--")
	for index, str in enumerate(sys.argv):
		if com.match(str):
			name = str.replace("-", "")
			index = index + 1
			value = sys.argv[index]
			param[name] = value

snippet for-in
	for letter in 'Python':
		print 'let %s' %(letter)

snippet for-json
	for key in json['data']:
		print key

snippet exit
	sys.exit(0)

snippet split
	str.split(",")


snippet dirname
	os.path.dirname(path)

snippet __DIR__
	os.path.dirname(path)

snippet mkdir
	os.makedirs(dir)

snippet file_write
	file = open(path, "w")
	file.write(content)
	file.close()

snippet file_read
	f = open("/xx", "r")
	content = f.read().splitlines()
	print(content)

snippet file_read_line_by_line
	filename = "XXXX.txt"

	with open(filename) as file:
		for line in file:
			print(line.rstrip())


snippet file_exist
	if not os.path.exists(file):

snippet if_file
	if not os.path.isfile(file):

snippet fetchUrl
	import urllib

	link = "http://wwwz.zcfz/fzsf4"
	f = urllib.urlopen(link)
	contente = f.read()
	print(contente)

##
# J
###
snippet json_parse
	import json
	j = json.loads(str)

snippet json_string
	import json
	j = json.dumps(js)

snippet json_print
	print(json.dumps(str.json(), ensure_ascii=False, indent=4, sort_keys=True).encode('utf-8'))

snippet json_if_not
	if "key" not in json["level1"]:

snippet join_array
	delimiter = ','
	delimiter.join(array)

snippet image_size
	import requests
	h = { 'User-Agent': 'Neo'}
	r = requests.get("https://images.freeimages.com/images/large-previews/85c/football-1442407.jpg", headers=h)

	from PIL import Image
	from io import BytesIO
	# create image from binary content
	i = Image.open(BytesIO(r.content))


	width, height = i.size
	print(width, height)
	i = i.resize((100,100))
	display(i)

snippet null
	None

snippet encoding
	import os;
	import locale;
	os.environ["PYTHONIOENCODING"] = "utf-8";
	myLocale=locale.setlocale(category=locale.LC_ALL, locale="en_US.UTF-8");

snippet curlimp
	import pycurl
	import StringIO

snippet curlinit
	url = "https://localhost/"
	url = url.encode('unicode-escape').decode('string_escape')
	response = StringIO.StringIO()
	c = pycurl.Curl()
	c.setopt(c.URL, url)
	c.setopt(c.WRITEFUNCTION, response.write)
	c.setopt(c.HTTPHEADER, ['Content-Type: application/json','Accept-Charset: UTF-8'])
	#c.setopt(c.POSTFIELDS, '@request.json')
	c.perform()
	print c.getinfo(pycurl.HTTP_CODE)
	c.close()
	print response.getvalue()
	response.close()

snippet strappend
	str = "%s%s" % ("a", "append_b")

snippet urlencode_imp
	import urllib

snippet urlencode
	urllib.quote("zzz")

snippet while
	while 1:
		print "aa"

snippet dynamodb_deleteItem
	import boto3
	from boto3.dynamodb.conditions import Key
	def deleteItems(dynamodb):
	table = dynamodb.Table('table_name')
	response = table.scan();
	for item in response['Items']:
		print "%s %s" % (item['id'], item['range'])
		table.delete_item(
		Key={
			'id': item['id'],
			'range': item['range']
		}
		);
		print "\n"
		dynamodb = boto3.resource('dynamodb')
	deleteItems(dynamodb)

snippet dynamodb_query
	def query(table, hashVal, rangeVal):
		response = table.query(
			KeyConditionExpression=Key('id').eq(hashVal) & Key('r').eq(rangeVal)
		)
		return response['Items']


snippet xml
	import xml.etree.ElementTree as ET
	root = ET.parse('file.xml').getroot()
	root = ET.fromstring(xml)
	html = root.find('html')
	lang = html.get('lang')
	ps = root.findall('html/body/p')
	for p in ps:
		style = price.get('style')

snippet mysql
	import MySQLdb
	db = MySQLdb.connect (
		host = "hostname",
		user = "username",
		passwd = "pas",
		db = "dbname",
		ssl = 1)
	conn  =  db.cursor ()
	conn.execute("insert into;")
	conn.execute("commit;")
	db.close ()

snippet class
	class obj():
		def __init__(self, param1, param2):
			self.param1 = param1
			return;
		def run(self):
			return;

snippet trim
	str.strip()

snippet imptime
	import time

snippet split_lines
	x.splitlines()

snippet time
	ts = time.gmtime()

snippet time_to_date
	datetime.fromtimestamp(10020xx).strftime('%Y%m%d')

snippet try
	try:
		..
	except Exception as e: print(e)

snippet sleep
	import time
	time.sleep(1)
