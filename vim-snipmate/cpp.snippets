snippet main
	#include <iostream>
	using namespace std;
	int main(int argc, const char *argv[])
	{
		${0}
		return 0;
	}
snippet include
	#include <iostream>
	#include <stdlib.h>
	#include <limit.h>

snippet getopt
	int choice;
	while (1)
	{
		static struct option long_options[] =
		{
			/* Use flags like so:
			{"verbose",no_argument,&verbo		se_flag, 'V'}*/
			/* Argument styles: no_argument, required_argument, optional_argument */
			{"version", no_argument,0,'v'},
			{"help",no_			argument,0,'h'},
			${1}
			{0,0,0,0}
		};

		int option_index = 0;

				/* Argument parameters:
			no_argument: " "
			required_argument: ":"
			optional_argument: "::" */

		choice = getopt_long( argc, argv, "vh",
					long_options, &option_index);

		if (choice == -1)
			break;

		switch( choice )
		{
			case 'v':
				${2}
				break;

			case 'h':
				${3}
				break;

			case '?':
				/* getopt_long will have already printed an error */
				break;

			default:
				/* Not sure how to get here... */
				return EXIT_FAILURE;
		}
	}

	/* Deal with non-option arguments here */
	if ( optind < argc )
	{
		while ( optind < argc )
		{
			${0}
		}
	}
snippet cla
	class ${1:`vim_snippets#Filename('$1', 'name')`} {
	public:
		$1(${2});
		~$1();

	private:
		${0:/* data */}
	};

snippet file_read
	#include <fstream>
	#include <string>
	std::ifstream ifs("myfile.txt");
	std::string content((std::istreambuf_iterator<char>(ifs) ),
						(std::istreambuf_iterator<char>() ) );

