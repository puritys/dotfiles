snippet main_groovy
	package com.yyy.zz;
	import spock.lang.Specification
	class CXXTest extends Specification {
		Config mockConfig
		def setup() {
			mockConfig = Mock(Config)
		}
	}

snippet func
	def "Test xxx"() {
		given:
			def data = zz
			def client = Mock(Client) {
				get() >> "test"
			}
		when:
			def  result = client.get(req)
		then:
			result == exp
		where:
		req | exp
		t   | test

snippet prepare
	where:
	req | exp
	t   | test

snippet map
	def m = [ key1: "v", key2: "v" ]


snippet mock
	def config = Mock(Config) {
		getString("env") >> "abc"
		getString(_) >> "zzz"
	}
	def service = new Service()
	service.inject = config

snippet mock_exception
	thrown(EmptyStackException)
	def e = thrown(EmptyStackException)
	e.cause == null
