priority -50

snippet if "if (condition) { ... }"
if`!p snip.rv = keyword_spacing(snip)`(${1:true}) {
	${VISUAL}$0
}

snippet doc
	/*
	 *
	 */

#########
# A - F
#########

snippet array-initial
	var ret: IntArray = intArrayOf(10, 20)
	val ret = IntArray(180) // 180 items all zero
	val ret = IntArray(180) {1} // initialize value

snippet log
	println("textl \${var}")

snippet for-from-to
	for (i in 0 until 3) {
		0 ~ 2
	}

snippet for-decrease
	for (i in 3 downTo 0) {
		3 ~ 0
	}

snippet for-from-to-step
	for (i in 0..5 step 2) {
	}

snippet for-iterator
	for(item in list){
	}

snippet for-forEach
	list.forEach {item ->
		println(item)
	}

snippet list-mutable
	var ret: MutableList<Int> = mutableListOf()

snippet main
	fun main(args: Array<String>) {
		println("Hello World!")
	}

##
# R - Z
##

snippet variable
	val s = "v"
	var a = "v" // could not reassign

snippet sort
	var sorted: List<Int> = nums.sorted()

snippet stack
	import java.util.ArrayDeque
	val stack = ArrayDeque<String>()
	stack.push("a")
	stack.pop()
