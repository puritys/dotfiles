snippet ts-getType
	typeof XXtype

snippet ts-class
	class Point {
		x: number;
		y: number;

		// Normal signature with defaults
		constructor(x = 0, y = 0) {
			this.x = x;
			this.y = y;
		}
	}

snippet ts-format
	`xxxx = ${yyy}`

snippet ts-enum
	enum Type {
		a = "a",
		b = "b",
	}

snippet ts-enum-all
	enum Type {
		a = "a",
		b = "b",
	}
	let ty = "a" as Type
	if (ty.valueOf() === Type.valueOf()) {

	}
	switch(ty) {
		case Type.a:
			break;
	}

snippet ts-enum-value
	xxx as EnumClass

snippet ts-func
	function getXX(id: string = "default") {
		return null;
	}

snippet ts-default-object
	func(params: {offset?: number, limit?: number}) {
		let {offset = 0, limit = 2} = params;
		console.log("${offset} ${limit}")
	}

snippet ts-merge-object
	let newObj = {...obj1, ...obj2}

snippet ts-anonymous-func-run
	(() => {
		console.log("go");
	})();
