"# revert arrow to auto get correct arrow color
func RevertTablineArrow(group, sel, fill)
    let id = synIDtrans(hlID(a:sel))
    for mode in ['cterm', 'gui']
        for g in ['bg']
            exe 'let '. mode. "fg=  synIDattr(id, '".
                        \ g."#', '". mode. "')"
            exe "let ". mode. "fg = empty(". mode. "fg) ? 'NONE' : ". mode."fg"
        endfor
    endfor
    let id = synIDtrans(hlID(a:fill))
    for mode in ['cterm', 'gui']
        for g in ['bg']
            exe 'let '. mode. "bg =  synIDattr(id, '".
                        \ g."#', '". mode. "')"
            exe "let ". mode. "bg = empty(". mode. "bg) ? 'NONE' : ". mode."bg"
        endfor
    endfor
    exe printf('hi %s ctermfg=%s ctermbg=%s guifg=%s guibg=%s', a:group, ctermfg, ctermbg, guifg, guibg)
endfunc

function! INIT_CPP()
    set filetype=cpp
    " OmniCppComplete
    set tags+=~/.vim/tags/cpp
    "map <C-F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
    let OmniCpp_NamespaceSearch = 1
    let OmniCpp_GlobalScopeSearch = 1
    let OmniCpp_ShowAccess = 1
    let OmniCpp_ShowPrototypeInAbbr = 1 " show function parameters
    let OmniCpp_MayCompleteDot = 1 " autocomplete after .
    let OmniCpp_MayCompleteArrow = 1 " autocomplete after ->
    let OmniCpp_MayCompleteScope = 1 " autocomplete after ::
    let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]
endfunction

function! INIT_PHP()
    set filetype=php
    set tags+=~/.vim/php_tags
    call PHP_KEYMAP()
endfunction

function! INIT_JAVA()
    set filetype=java
endfunction

" coc hover function
function! Show_coc_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  elseif (coc#rpc#ready())
    call CocActionAsync('doHover')
  else
    execute '!' . &keywordprg . " " . expand('<cword>')
  endif
endfunction

function! TogggleAleFixOnSave()
    if g:ale_fix_on_save == 1
        echo "disable ale_fix_on_save"
        let g:ale_fix_on_save = 0
    else
        echo "enable ale_fix_on_save"
        let g:ale_fix_on_save = 1
    endif
endfunction
