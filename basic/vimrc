" ============
" Set Default Value & function
" ============
function! DisableAle()
    let g:ale_lint_on_enter = 0
    let g:ale_lint_on_text_changed = 'never'
    let g:ale_lint_on_save = 0
    let g:ale_linters = {'java': []}
    let g:ale_completion_enabled = 0
   "" let g:ale_linters_explicit = 1
endfunction


let g:forceUseTab = 1
if !exists("g:enablePluginLightLine")
    let g:enablePluginLightLine = 1
endif
if !exists("g:enablePluginYouCompleteMe")
    let g:enablePluginYouCompleteMe = 0
endif
if !exists("g:enablePluginYouCompleteMeSyntax")
    let g:enablePluginYouCompleteMeSyntax = 0
endif
if !exists("g:enablePluginAle")
    let g:enablePluginAle = 1
endif
if !exists("g:enablePluginAleAutoComplete")
    let g:enablePluginAleAutoComplete = 0
endif
if !exists("g:enablePluginAirline")
    let g:enablePluginAirline = 0
endif
if !exists("g:enablePluginAleJavaagent")
    let g:enablePluginAleJavaagent = 0
endif
if !exists("g:enableCocLsp")
    let g:enableCocLsp = 1
endif

" vim log
"set verbosefile=/tmp/vim.log

" load fzf
set rtp+=~/.fzf

syntax on

set laststatus=2   " Always show the statusline
set encoding=utf-8 " Necessary to show Unicode glyphs
if !has('nvim')
    set term=xterm-256color
endif
set termencoding=utf-8

set noswapfile
set nocompatible
set hlsearch "high light search
set encoding=utf-8
set nu
set tabstop=4 shiftwidth=4  softtabstop=0 expandtab
set nosmarttab
"set nois " quick search

set showcmd
set bg=dark
set backspace=2
set t_Co=256 "設定成256色
source $VIMRUNTIME/macros/matchit.vim
set foldmethod=marker
set tabpagemax=100

" vim version is smaller than 8 the cursorline performance is bad
if version > 800 || has('nvim')
    set cursorline
endif

" cursor shape
if has('nvim')
    set guicursor=n-v-c-i:block
endif

"use mouse
"set mouse=a

"最下面出現目前行數
set ruler

let mapleader=","

set encoding=utf-8
set fileencodings=utf-8,big5,cp936,latin1 "encoding
set termencoding=utf-8


source $VIMRUNTIME/menu.vim
set wildmenu
set cpo-=<
set wcm=<C-Z>

" deafult igonorecase, start with  \C is case sensitive,  start with \c is ignorecase
set smartcase
" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif

if version > 800 || has('vim')
    set completeopt=menuone,menu,noinsert,longest"
else
    set completeopt=menuone,menu"
endif

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
if has("nvim-0.5.0") || has("patch-8.1.1564")
  " Recently vim can merge signcolumn and number column into one
  set signcolumn=number
else
  set signcolumn=yes
endif

if has('python3')
    set pyx=3
elseif has('python')
    set pyx=2
endif
source ~/.vimrc_lib
source ~/.vimrc_keymaps



au BufRead,BufNewFile *.sjs set filetype=javascript
au BufRead,BufNewFile *.js set filetype=javascript
au BufRead,BufNewFile *.html set filetype=html
au BufRead,BufNewFile *.go set filetype=go
au BufRead,BufNewFile *.java call INIT_JAVA()
au BufRead,BufNewFile *.groovy call INIT_JAVA()
au BufRead,BufNewFile *.py set filetype=python
au BufRead,BufNewFile *.vim set filetype=vim
au BufRead,BufNewFile *.cc  call INIT_CPP()
au BufRead,BufNewFile *.c   call INIT_CPP()
au BufRead,BufNewFile *.cpp   call INIT_CPP()
au BufRead,BufNewFile *.php call INIT_PHP()
au BufRead,BufNewFile *.phtml call INIT_PHP()
au BufRead,BufNewFile *.inc call INIT_PHP()

function! Tab_Or_Complete()
  if col('.')>1 && strpart( getline('.'), col('.')-2, 3 ) =~ '\(^\w\|>$\|:$\)'
    return "\<C-X>\<C-O>"
  else
    return "\<Tab>"
  endif
endfunction

"":set dictionary="/usr/dict/words"


if has("autocmd")
  " whitespace
  autocmd BufRead,BufNew * match ExtraWhitespace /\t\+\| \s\+$/
    hi ExtraWhitespace cterm=NONE ctermfg=NONE ctermbg=252 guifg=NONE guibg=#d0d0d0
endif

if !empty(glob("~/.vimrc_customized"))
    source ~/.vimrc_customized
endif


source ~/.vimrc_plugins

" indent
set nocindent
set autoindent
set nosmartindent
filetype indent off

if has("autocmd")
    au FileType php,phtml,java set cindent autoindent
    au FileType php,phtml filetype indent on
    au FileType cpp,c,cc  set cindent autoindent
    au BufRead,BufNewFile *.alias*,*.bash* setlocal ft=sh
endif



""" Theme
" To enable true colors
if has("termguicolors")
    set termguicolors
endif

" customized theme: export VIM_THEME=nord
if (!empty($VIM_THEME))
    call SWITCH_THEME_AS_NAME($VIM_THEME)
else
    call SWITCH_THEME_AS_NAME("mystyle_white")
endif

" disable paste bracket mode
" https://unix.stackexchange.com/questions/196098/copy-paste-in-xfce4-terminal-adds-0-and-1/196574#196574?newreg=50a3302c8f334958bfbe56d4f03cc548
set t_BE=


" to fix nvim file is changed by another process
" https://github.com/neovim/neovim/pull/12593
if has('nvim')
    augroup AutoSwap
            autocmd!
            autocmd SwapExists *  call AS_HandleSwapfile(expand('<afile>:p'), v:swapname)
    augroup END

    function! AS_HandleSwapfile (filename, swapname)
            " if swapfile is older than file itself, just get rid of it
            if getftime(v:swapname) < getftime(a:filename)
                    call delete(v:swapname)
                    let v:swapchoice = 'e'
            endif
    endfunction
    autocmd CursorHold,BufWritePost,BufReadPost,BufLeave *
      \ if isdirectory(expand("<amatch>:h")) | let &swapfile = &modified | endif
    augroup checktime
        au!
        if !has("gui_running")
            "silent! necessary otherwise throws errors when using command
            "line window.
            autocmd BufEnter,CursorHold,CursorHoldI,CursorMoved,CursorMovedI,FocusGained,BufEnter,FocusLost,WinLeave * checktime
        endif
    augroup END
endif
